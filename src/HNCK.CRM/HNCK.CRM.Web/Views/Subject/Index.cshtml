@model HNCK.CRM.Web.ViewModels.Subject.SubjectIndexViewModel

<div class="row">
	<div class="col-md-10">
		<h2 id="TitleText" class="hnck-text-blue float-left">@Localizer.GetString("Title")</h2>
	</div>


	<div class="col-md-2">

		<div class="btn-group">
			@*<button type="button" class="btn btn-primary">Action</button>*@
			<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				@Localizer.GetString("DOCX")
			</button>
			<div class="dropdown-menu">
				<a class="dropdown-item" href="#" id="GenerateDocument_01">@Localizer.GetString("SuhlasVlastnikaNehnutelnosti")</a>
				<a class="dropdown-item" href="#" id="GenerateDocument_02">@Localizer.GetString("CudzinciSplnomocnenie")</a>
				@*<a class="dropdown-item" href="#" id="GenerateDocument_03">@Localizer.GetString("VyhlasenieJedinehoSpolocnika")</a>
				<a class="dropdown-item" href="#" id="GenerateDocument_04">@Localizer.GetString("SpravcaVkladu")</a>
				<a class="dropdown-item" href="#" id="GenerateDocument_05">@Localizer.GetString("ZakladatelskaListina")</a>
				<a class="dropdown-item" href="#" id="GenerateDocument_06">@Localizer.GetString("Splnomocnenie")</a>
				<a class="dropdown-item" href="#" id="GenerateDocument_07">@Localizer.GetString("SplnomocnenieDanoviAutori")</a>
				<a class="dropdown-item" href="#" id="GenerateDocument_08">@Localizer.GetString("VyhlasenieDoOr")</a>*@
			</div>
		</div>
		<a type="button" class="btn btn-primary float-right" asp-action="Create" asp-controller="Subject">@Localizer.GetString("CreateButton")</a>
	</div>
</div>
<div class="row">
	<div class="col-md-12">
		<div class="text-center hnck-grid">
			<hr />
			<div>
				<div id="SubjectGrid">
					@(Html.Kendo().Grid<HNCK.CRM.Dto.Subject.SubjectDto>()
						.Name("SubjectGrid")
						.Columns(columns =>
						{
							columns.Select().Width(20);
							columns.Bound(p => p.LastName).Title(@Localizer.GetString("LastNameColumn")).Width(150);
							columns.Bound(p => p.FirstName).Title(@Localizer.GetString("FirstNameColumn")).Width(150);
							columns.Bound(p => p.Email).Title(@Localizer.GetString("EmailColumn")).Width(150);
							columns.Bound(p => p.TelNumber).Title(@Localizer.GetString("TelNumberColumn")).Width(150);
							//columns.Bound(p => p.FullAddress).Title(@Localizer.GetString("AddressColumn")).Width(400);
							columns.Bound(p => p.IdSubject).Title(" ")
								.Width(30)
								.ClientTemplate("#= subjectDetail(data) #")
								.Filterable(false);
							columns.Bound(p => p.IdSubject).Title(" ")
								.Width(30)
								.ClientTemplate("#= subjectUpdate(data) #")
								.Filterable(false);
							columns.Bound(p => p.IdSubject).Title(" ")
								.Width(30)
								.ClientTemplate("#= subjectDelete(data) #")
								.Filterable(false);
							//columns.Bound(p => p.IdSubject).Title(" ")
							//	.Width(30)
							//	.ClientTemplate("#= subjectDropDown(data) #")
							//	.Filterable(false);
						})
						.ToolBar(tools => tools.Excel().Text(@Localizer.GetString("ExportButton")))
							.Excel(excel => excel
								.FileName("subjects.xlsx")
								.Filterable(true)
								.AllPages(true)
							)
						.Pageable()
						.Navigatable()
						.Sortable()
						.Events(ev => ev.Change("recordsCheckedonChange"))
						.Groupable()
						.Filterable(ftb => ftb.Mode(GridFilterMode.Row))
						.Scrollable(x => x.Height("Auto"))
						.DataSource(dataSource => dataSource
							.Ajax()
							.PageSize(20)
							.Model(model => model.Id(p => p.IdSubject))
						.Read("GetSubject_Read", "Subject")
						)
					)
				</div>
			</div>
		</div>
	</div>
</div>